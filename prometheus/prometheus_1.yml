# my global config
global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  #external_labels:
  #    monitor: 'my-project'

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  - 'alert.rules'
  - 'alerts/*.yml'
  # - "first.rules"
  # - "second.rules"

# alert
alerting:
  alertmanagers:
  - scheme: http
    static_configs:
    - targets:
      - "alertmanager:9093"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  - job_name: 'prometheus'
    scrape_interval: 15s
    static_configs:
         - targets: ['localhost:9090']

  - job_name: "cnosul-prometheus"
    consul_sd_configs:
      - server: "192.168.18.178:8501"
        services: []
    relabel_configs: # relabe 重写
      - source_labels: [__meta_consul_service] # service源标签 
        regex: "consul" # service匹配
        action: drop  # 执行的动作, 这里不需要consul的metrics，所以drop掉
      - source_labels: [__meta_consul_service_metadata_hostname] # 将此标签的值重写为instance
        target_label: instance
        action: replace
      - source_labels: [__meta_consul_service_metadata_group]
        target_label: group
        action: replace
      - source_labels: [__scheme__, __address__, __metrics_path__]
        regex: "(http|https)(.*)"    # 两个分组
        separator: ""
        target_label: "endpoint"
        replacement: "${1}://${2}"   # 引用两个分组
        action: replace
